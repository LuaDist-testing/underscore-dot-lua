local _ = require("src/underscore")

describe("_.is_equal", function()
	describe("when objects are different types", function()
		it("should return false", function()
			assert.are.equals(_.is_equal(true, 10), false)
			assert.are.equals(_.is_equal("10", 10), false)
		end)
	end)

	describe("when objects are not tables", function()
		describe("when items are the same value", function()
			it("should return true", function()
				assert.are.equals(_.is_equal(5, 5), true)
				assert.are.equals(_.is_equal(true, true), true)
				assert.are.equals(_.is_equal(false, false), true)
				assert.are.equals(_.is_equal(nil, nil), true)
				assert.are.equals(_.is_equal(3.3, 3.3), true)
				assert.are.equals(_.is_equal("foo", "foo"), true)
			end)
		end)

		describe("when items are not the same value", function()
			it("should return false", function()
				assert.are.equals(_.is_equal(5, 6), false)
				assert.are.equals(_.is_equal(true, false), false)
				assert.are.equals(_.is_equal(3.3, 5.3), false)
				assert.are.equals(_.is_equal("foo", "bar"), false)
			end)
		end)
	end)

	describe("when both objects are tables", function()
		describe("when the tables are equivalent", function()
			it("should return true", function()
				assert.are.equals(_.is_equal({}, {}), true)
				assert.are.equals(_.is_equal({1, 2, 3}, {1, 2, 3}), true)
				assert.are.equals(_.is_equal({a = 1, b = 2, c = 3}, {a = 1, b = 2,c = 3}), true)
				assert(_.is_equal({a = 1, b = 2, c = {a = 1, b = {}}}, {a = 1, b = 2, c = {a = 1, b = {}}}))
			end)
		end)

		describe("when the tables are not equivalent", function()
			it("should return false", function()
				assert.are.equals(_.is_equal({}, {1}), false)
				assert.are.equals(_.is_equal({1,2,3}, {1,2,3,4}), false)
				assert.are.equals(_.is_equal({a=1,b=2,c=3}, {a=1,b=2,c=3,d=4}), false)
				assert.are.equals(_.is_equal({a=1,b=2,c=3,d=4}, {a=1,b=2,c=3}), false)
				assert.are.equals(_.is_equal({a=1,b=2,c={a=1,b={}}}, {a=1,b=2,c={a=1,b={1}}}), false)
			end)
		end)

		describe("when the first table has a __eq metamethod", function()
			it("should use the metamethod", function()
				local mt = { __eq = function() return true end }
				local t1 = setmetatable({}, mt)
				local t2 = setmetatable({}, mt)

				assert.are.equals(_.is_equal(t1, t2), true)
			end)
		end)
	end)
end)
